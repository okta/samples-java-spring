<!--
  ~ Copyright 2017 Okta, Inc.
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~     http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>3.0.4</version>
    </parent>

    <groupId>com.example.okta</groupId>
    <artifactId>okta-spring-boot-oauth-code-flow-custom-login-example</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <packaging>jar</packaging>

    <name>Okta :: Samples :: Spring Boot :: Code Flow + Custom Login Page</name>
    <description>Okta OAuth 2.0 w/ Spring Boot Example + Custom Login Page</description>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <java.version>1.8</java.version>
    </properties>

    <dependencies>
        <dependency>
            <groupId>com.okta.spring</groupId>
            <artifactId>okta-spring-boot-starter</artifactId>
            <version>3.0.2</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-thymeleaf</artifactId>
            <version>3.0.2</version>
        </dependency>
        <dependency>
            <groupId>org.thymeleaf.extras</groupId>
            <artifactId>thymeleaf-extras-springsecurity6</artifactId>
            <version>3.1.1.RELEASE</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>com.nimbusds</groupId>
            <artifactId>nimbus-jose-jwt</artifactId>
            <version>9.31</version>
        </dependency>

        <!-- Logging -->
        <dependency>
            <!-- Required for any libraries that expect to call the commons logging APIs -->
            <groupId>org.slf4j</groupId>
            <artifactId>jcl-over-slf4j</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <scope>runtime</scope>
        </dependency>

        <!-- Okta's standard OAuth/OIDC tests, you do not need this in your project -->
        <dependency>
            <groupId>com.okta.oidc.tck</groupId>
            <artifactId>okta-oidc-tck</artifactId>
            <version>0.5.10</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.codehaus.groovy</groupId>
            <artifactId>groovy</artifactId>
            <version>3.0.15</version>
            <scope>test</scope>
        </dependency>

    </dependencies>

    <build>
        <defaultGoal>spring-boot:run</defaultGoal>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <configuration>
                    <fork>false</fork>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <!-- Everything below here is to test this project, you wouldn't need the remaining in your own project -->
    <profiles>
        <profile>
            <id>okta-tck</id>

            <properties>
                <node.version>v10.15.1</node.version>
            </properties>

            <build>
                <plugins>
                    <!-- Tell failsafe to run Okta's oidc-tck -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-failsafe-plugin</artifactId>
                        <version>2.22.2</version>
                        <configuration>
                            <dependenciesToScan>
                                <dependency>com.okta.oidc.tck:okta-oidc-tck</dependency>
                            </dependenciesToScan>
                            <systemPropertyVariables>
                                <okta.tck.redirectOnError>true</okta.tck.redirectOnError>
                            </systemPropertyVariables>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-dependency-plugin</artifactId>
                        <version>3.5.0</version>
                        <executions>
                            <execution>
                             <id>unpack</id>
                             <phase>package</phase>
                             <goals>
                               <goal>unpack</goal>
                             </goals>
                             <configuration>
                                <artifactItems>
                                    <!-- extract the tck UI tests -->
                                    <artifactItem>
                                        <groupId>com.okta.oidc.tck</groupId>
                                        <artifactId>okta-oidc-tck</artifactId>
                                        <classifier>e2e</classifier>
                                        <type>zip</type>
                                        <outputDirectory>${project.build.testOutputDirectory}/</outputDirectory>
                                    </artifactItem>
                                    <!-- extract the tck keystore -->
                                    <artifactItem>
                                        <groupId>com.okta.oidc.tck</groupId>
                                        <artifactId>okta-oidc-tck</artifactId>
                                        <outputDirectory>${project.build.directory}</outputDirectory>
                                        <destFileName>tck-keystore.jks</destFileName>
                                        <includes>tck-keystore.jks</includes>
                                    </artifactItem>
                                </artifactItems>
                                <overWriteReleases>false</overWriteReleases>
                                <overWriteSnapshots>true</overWriteSnapshots>
                             </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <!-- use the frontend plugin to drive javascript based selenium tests -->
                        <groupId>com.github.eirslett</groupId>
                        <artifactId>frontend-maven-plugin</artifactId>
                        <version>1.12.1</version>
                        <configuration>
                            <nodeVersion>${node.version}</nodeVersion>
                            <workingDirectory>${project.build.testOutputDirectory}</workingDirectory>
                        </configuration>
                        <executions>
                         <execution>
                             <id>install node</id>
                             <phase>verify</phase>
                             <goals>
                                 <goal>install-node-and-npm</goal>
                             </goals>
                         </execution>
                         <execution>
                             <id>npm install</id>
                             <phase>verify</phase>
                             <goals>
                                 <goal>npm</goal>
                             </goals>
                             <configuration>
                                 <arguments>install</arguments>
                             </configuration>
                         </execution>
                         <execution>
                             <id>npm test</id>
                             <phase>verify</phase>
                             <goals>
                                 <goal>npm</goal>
                             </goals>
                             <configuration>
                                 <arguments>test</arguments>
                             </configuration>
                         </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
