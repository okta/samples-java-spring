<div class="doc-login-custom">
  <h2 class="ui dividing header">
    Create a custom login page
    <div class="sub header">Authorization code grant</div>
  </h2>

  <p>
    Use the
    <a href="http://developer.okta.com/code/javascript/okta_sign-in_widget.html">
      Sign-In Widget
    </a>
    to quickly and easily create a custom login page for your app. The widget is
    a Javascript wrapper around the
    <a href="http://developer.okta.com/docs/api/resources/authn.html">
      Authentication API
    </a> - it implements a UI layer for the Primary Auth, MFA, and Recovery flows.
  </p>
  <p>
    Read more about
    configuration options in the
    <a href="https://github.com/okta/okta-signin-widget#configuration">README</a>.
  </p>
  <div class="example">
    <h3>Example</h3>
    <div class="ui segment">
      <pre><code class="javascript">const signIn = new SignIn({
  baseUrl: '{{config.oidc.oktaUrl}}',
  clientId: '{{config.oidc.clientId}}',
  redirectUri: '{{config.oidc.redirectUri}}',
  authParams: {
    responseType: 'code',
    scopes: ['openid', 'email', 'profile'],
  },
  i18n: {
    en: {
      'primaryauth.title': 'Use john/Asdf1234 for the mock Okta server',
    },
  },
});

signIn.renderEl({ el: '#app-container' }, () => {});</code></pre>
    </div>
  </div>
</div>
