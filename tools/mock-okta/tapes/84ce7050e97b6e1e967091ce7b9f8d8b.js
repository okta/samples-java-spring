var path = require("path");

/**
 * GET /login/login.htm;jsessionid=C245B854C7006EE672A30A43AAD4E5CF?fromURI=/oauth2/v1/authorize/redirect?okta_key=PYH_HkL0S91TROH1o1zg131XqLGFrcqxYOm7bO7eSiU
 *
 * host: rain.okta1.com:1802
 * connection: keep-alive
 * user-agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.10; rv:48.0) Gecko/20100101 Firefox/48.0
 * accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,* / *;q=0.8
 * accept-encoding: gzip
 * accept-language: en-US
 * cookie: t=default; DT=DI0w-VAje2vRb66PZPvGaKpug; JSESSIONID=C245B854C7006EE672A30A43AAD4E5CF
 * cache-control: no-cache, no-store
 * pragma: no-cache
 */

module.exports = function (req, res) {
  res.statusCode = 200;

  res.setHeader("server", "Apache-Coyote/1.1");
  res.setHeader("x-okta-request-id", "reqQ8q8_HbYQfCKGKR951h-dg");
  res.setHeader("p3p", "CP=\"HONK\"");
  res.setHeader("set-cookie", ["sid=\"\"; Expires=Thu, 01-Jan-1970 00:00:10 GMT; Path=/","t=default; Path=/","sid=\"\"; Expires=Thu, 01-Jan-1970 00:00:10 GMT; Path=/","JSESSIONID=C245B854C7006EE672A30A43AAD4E5CF; Path=/"]);
  res.setHeader("x-rate-limit-limit", "850");
  res.setHeader("x-rate-limit-remaining", "849");
  res.setHeader("x-rate-limit-reset", "1508203657");
  res.setHeader("x-okta-backend", "albatross");
  res.setHeader("cache-control", "no-cache, no-store");
  res.setHeader("pragma", "no-cache");
  res.setHeader("expires", "0");
  res.setHeader("x-frame-options", "SAMEORIGIN");
  res.setHeader("x-ua-compatible", "IE=edge");
  res.setHeader("content-type", "text/html;charset=utf-8");
  res.setHeader("content-language", "en");
  res.setHeader("transfer-encoding", "chunked");
  res.setHeader("date", "Tue, 17 Oct 2017 01:26:37 GMT");

  res.setHeader("x-yakbak-tape", path.basename(__filename, ".js"));

  res.write(new Buffer("PCFET0NUWVBFIGh0bWw+CjwhLS1baWYgSUUgN10+PGh0bWwgY2xhc3M9Imx0LWllMTAgbHQtaWU5IGx0LWllOCI+PCFbZW5kaWZdLS0+CjwhLS1baWYgSUUgOF0+PGh0bWwgY2xhc3M9Imx0LWllMTAgbHQtaWU5Ij4gPCFbZW5kaWZdLS0+CjwhLS1baWYgSUUgOV0+PGh0bWwgY2xhc3M9Imx0LWllMTAiPjwhW2VuZGlmXS0tPgo8IS0tW2lmIGd0IElFIDldPjxodG1sPjwhW2VuZGlmXS0tPgo8IS0tW2lmICFJRV0+PCEtLT48aHRtbD48IS0tPCFbZW5kaWZdLS0+CjxoZWFkPgoKICAgIDxzY3JpcHQ+aWYgKHR5cGVvZiBtb2R1bGUgPT09ICdvYmplY3QnKSB7d2luZG93Lm1vZHVsZSA9IG1vZHVsZTsgbW9kdWxlID0gdW5kZWZpbmVkO308L3NjcmlwdD4KCiAgICA8dGl0bGU+UmFpbi1DbG91ZDU5IC0gU2lnbiBJbjwvdGl0bGU+CiAgICAgICAgPG1ldGEgY2hhcnNldD0iVVRGLTgiPgogICAgPG1ldGEgbmFtZT0idmlld3BvcnQiIGNvbnRlbnQ9IndpZHRoPWRldmljZS13aWR0aCwgaW5pdGlhbC1zY2FsZT0xLjAiIC8+CiAgICA8bWV0YSBuYW1lPSJyb2JvdHMiIGNvbnRlbnQ9Im5vbmUiIC8+CgogICAgPGxpbmsgaHJlZj0iaHR0cDovL3JhaW4ub2t0YTEuY29tOjE4MDIvYXNzZXRzL2xvZ2lucGFnZS9jc3Mvb2t0YS1sb2dpbi1wYWdlLm1pbi4wMmVlN2E1ZjI4ODA1ZGQ3MTk0MGVjMzUzOWU0NzI0Zi5jc3MiIHR5cGU9InRleHQvY3NzIiByZWw9InN0eWxlc2hlZXQiLz48c2NyaXB0PgogICAgICAgIHZhciBva3RhID0gewogICAgICAgICAgICBsb2NhbGU6ICdlbicKICAgICAgICB9OwogICAgPC9zY3JpcHQ+CiAgICA8c2NyaXB0PndpbmRvdy5va3RhIHx8ICh3aW5kb3cub2t0YSA9IHt9KTsgb2t0YS5jZG5VcmxIb3N0bmFtZSA9ICIiOyBva3RhLmNkblBlcmZvcm1DaGVjayA9IGZhbHNlOzwvc2NyaXB0PjxzY3JpcHQ+d2luZG93Lm9rdGEgfHwgKHdpbmRvdy5va3RhID0ge30pO3dpbmRvdy5va3RhLm1peHBhbmVsID0gdHJ1ZTs8L3NjcmlwdD48c2NyaXB0PmlmICh3aW5kb3cubW9kdWxlKSBtb2R1bGUgPSB3aW5kb3cubW9kdWxlOzwvc2NyaXB0PgoKPC9oZWFkPgo8Ym9keSBjbGFzcz0iYXV0aCBva3RhLWNvbnRhaW5lciI+Cgo8IS0tW2lmIGd0ZSBJRSA4XT4KICA8IVtpZiBsdGUgSUUgOV0+CgogICAgPHN0eWxlPgogICAgLnVuc3VwcG9ydGVkLWJyb3dzZXItYmFubmVyLXdyYXAgewogICAgICBwYWRkaW5nOiAyMHB4OwogICAgICBib3JkZXI6IDFweCBzb2xpZCAjZGRkOwogICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjNmYmZmOwogICAgfQogICAgLnVuc3VwcG9ydGVkLWJyb3dzZXItYmFubmVyLWlubmVyIHsKICAgICAgcG9zaXRpb246IHJlbGF0aXZlOwogICAgICB3aWR0aDogNzM1cHg7CiAgICAgIG1hcmdpbjogMCBhdXRvOwogICAgICB0ZXh0LWFsaWduOiBsZWZ0OwogICAgfQogICAgLnVuc3VwcG9ydGVkLWJyb3dzZXItYmFubmVyLWlubmVyIC5pY29uIHsKICAgICAgdmVydGljYWwtYWxpZ246IHRvcDsKICAgICAgbWFyZ2luLXJpZ2h0OiAyMHB4OwogICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7CiAgICAgIHBvc2l0aW9uOiBzdGF0aWMgIWltcG9ydGFudDsKICAgIH0KICAgIC51bnN1cHBvcnRlZC1icm93c2VyLWJhbm5lci1pbm5lciBhIHsKICAgICAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7CiAgICB9CiAgICA8L3N0eWxlPgoKICAgIDxkaXYgY2xhc3M9InVuc3VwcG9ydGVkLWJyb3dzZXItYmFubmVyLXdyYXAiPgogICAgICA8ZGl2IGNsYXNzPSJ1bnN1cHBvcnRlZC1icm93c2VyLWJhbm5lci1pbm5lciI+CiAgICAgICAgPHNwYW4gY2xhc3M9Imljb24gaWNvbi0xNiBpY29uLW9ubHkgd2FybmluZy0xNi15ZWxsb3ciPjwvc3Bhbj5Zb3UgYXJlIHVzaW5nIGFuIHVuc3VwcG9ydGVkIGJyb3dzZXIuIEZvciB0aGUgYmVzdCBleHBlcmllbmNlLCB1cGRhdGUgdG8gPGEgaHJlZj0iaHR0cHM6Ly9zdXBwb3J0Lm9rdGEuY29tL2hlbHAvYXJ0aWNsZXMvS25vd2xlZGdlX0FydGljbGUvMjQ1MzI5NTItUGxhdGZvcm1zLS0tQnJvd3Nlci1hbmQtT1MtU3VwcG9ydCI+YSBzdXBwb3J0ZWQgYnJvd3NlcjwvYT4uPC9kaXY+CiAgICA8L2Rpdj4KCiAgPCFbZW5kaWZdPgo8IVtlbmRpZl0tLT4KPCEtLVtpZiBJRSA4XT4gPGRpdiBjbGFzcz0ibG9naW4tYmctaW1hZ2UiIGRhdGEtc2U9ImxvZ2luLWJnLWltYWdlIiBzdHlsZT0iIj48L2Rpdj4gPCFbZW5kaWZdLS0+CjwhLS1baWYgKGd0IElFIDgpfCEoSUUpXT48IS0tPiA8ZGl2IGNsYXNzPSJsb2dpbi1iZy1pbWFnZSIgZGF0YS1zZT0ibG9naW4tYmctaW1hZ2UiIHN0eWxlPSJiYWNrZ3JvdW5kLWltYWdlOiBub25lIj48L2Rpdj4gPCEtLTwhW2VuZGlmXS0tPgoKPGRpdiBjbGFzcz0iY29udGVudCI+CiAgPHN0eWxlIHR5cGU9InRleHQvY3NzIj4KICAgIC5ub3NjcmlwdC1tc2cgewogICAgICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmY7CiAgICAgICAgYm9yZGVyLWNvbG9yOiAjZGRkICNkZGQgI2Q4ZDhkODsKICAgICAgICBib3gtc2hhZG93OjAgMnB4IDAgcmdiYSgxNzUsIDE3NSwgMTc1LCAwLjEyKTsKICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7CiAgICAgICAgd2lkdGg6IDM5OHB4OwogICAgICAgIG1pbi13aWR0aDogMzAwcHg7CiAgICAgICAgbWFyZ2luOiAyMDBweCBhdXRvOwogICAgICAgIGJvcmRlci1yYWRpdXM6IDNweDsKICAgICAgICBib3JkZXItd2lkdGg6IDFweDsKICAgICAgICBib3JkZXItc3R5bGU6IHNvbGlkOwogICAgfQoKICAgIC5ub3NjcmlwdC1jb250ZW50IHsKICAgICAgICBwYWRkaW5nOiA0MnB4OwogICAgfQoKICAgIC5ub3NjcmlwdC1jb250ZW50IGgyIHsKICAgICAgICBwYWRkaW5nLWJvdHRvbTogMjBweDsKICAgIH0KCiAgICAubm9zY3JpcHQtY29udGVudCBoMSB7CiAgICAgICAgcGFkZGluZy1ib3R0b206IDI1cHg7CiAgICB9CgogICAgLm5vc2NyaXB0LWNvbnRlbnQgYSB7CiAgICAgICAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7CiAgICAgICAgYm94LXNoYWRvdzogbm9uZTsKICAgICAgICBkaXNwbGF5OiB0YWJsZS1jZWxsOwogICAgICAgIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7CiAgICAgICAgd2lkdGg6IDMxNHB4OwogICAgICAgIGhlaWdodDogNTBweDsKICAgICAgICBsaW5lLWhlaWdodDogMzZweDsKICAgICAgICBjb2xvcjogI2ZmZjsKICAgICAgICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoIzAwN2RjMSwgIzAwNzNiMiksICMwMDdkYzE7CiAgICAgICAgYm9yZGVyOiAxcHggc29saWQ7CiAgICAgICAgYm9yZGVyLWNvbG9yOiAjMDA0Yjc1OwogICAgICAgIGJvcmRlci1ib3R0b20tY29sb3I6ICMwMDQ1NmE7CiAgICAgICAgYm94LXNoYWRvdzogcmdiYSgwLCAwLCAwLCAwLjE1KSAwIDFweCAwLCByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMSkgMCAxcHggMCAwIGluc2V0OwogICAgICAgIC13ZWJraXQtYm9yZGVyLXJhZGl1czogM3B4OwogICAgICAgIGJvcmRlci1yYWRpdXM6IDNweDsKICAgIH0KCiAgICAubm9zY3JpcHQtY29udGVudCBhOmhvdmVyIHsKICAgICAgICBiYWNrZ3JvdW5kOiAjMDA3ZGMxOwogICAgICAgIGN1cnNvcjogaGFuZDsKICAgICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7CiAgICB9Cjwvc3R5bGU+Cjxub3NjcmlwdD4KICAgIDxkaXYgaWQ9Im5vc2NyaXB0LW1zZyIgY2xhc3M9Im5vc2NyaXB0LW1zZyI+CiAgICAgICAgPGRpdiBjbGFzcz0ibm9zY3JpcHQtY29udGVudCI+CiAgICAgICAgICAgIDxoMj5KYXZhc2NyaXB0IGlzIHJlcXVpcmVkPC9oMj4KICAgICAgICAgICAgPGgxPkphdmFzY3JpcHQgaXMgZGlzYWJsZWQgb24geW91ciBicm93c2VyLiZuYnNwUGxlYXNlIGVuYWJsZSBKYXZhc2NyaXB0IGFuZCByZWZyZXNoIHRoaXMgcGFnZS48L2gxPgogICAgICAgICAgICA8YSBocmVmPSIuIj5SZWZyZXNoPC9hPgogICAgICAgIDwvZGl2PgogICAgPC9kaXY+Cjwvbm9zY3JpcHQ+CjxkaXYgaWQ9InNpZ25pbi1jb250YWluZXIiPjwvZGl2PgogIDxkaXYgaWQ9Im9rdGEtc2lnbi1pbiIgY2xhc3M9ImF1dGgtY29udGFpbmVyIG1haW4tY29udGFpbmVyIiBzdHlsZT0iZGlzcGxheTpub25lIj4KICAgICAgPGRpdiBpZD0idW5zdXBwb3J0ZWQtb25lZHJpdmUiIGNsYXNzPSJ1bnN1cHBvcnRlZC1tZXNzYWdlIiBzdHlsZT0iZGlzcGxheTpub25lIj4KICAgICAgICA8aDIgY2xhc3M9Im8tZm9ybS1oZWFkIj5Zb3VyIE9uZURyaXZlIHZlcnNpb24gaXMgbm90IHN1cHBvcnRlZDwvaDI+CiAgICAgICAgPHA+VXBncmFkZSBub3cgYnkgaW5zdGFsbGluZyB0aGUgT25lRHJpdmUgZm9yIEJ1c2luZXNzIE5leHQgR2VuZXJhdGlvbiBTeW5jIENsaWVudCB0byBsb2dpbiB0byBPa3RhPC9wPgogICAgICAgIDxhIGNsYXNzPSJidXR0b24gYnV0dG9uLXByaW1hcnkiIHRhcmdldD0iX2JsYW5rIiBocmVmPSJodHRwczovL3N1cHBvcnQub2t0YS5jb20vaGVscC9hcnRpY2xlcy9Lbm93bGVkZ2VfQXJ0aWNsZS9VcGdyYWRpbmctdG8tT25lRHJpdmUtZm9yLUJ1c2luZXNzLU5leHQtR2VuZXJhdGlvbi1TeW5jLUNsaWVudCI+CiAgICAgICAgICBMZWFybiBob3cgdG8gdXBncmFkZTwvYT4KICAgICAgPC9kaXY+CiAgICAgIDxkaXYgaWQ9InVuc3VwcG9ydGVkLWNvb2tpZSIgY2xhc3M9InVuc3VwcG9ydGVkLW1lc3NhZ2UiIHN0eWxlPSJkaXNwbGF5Om5vbmUiPgogICAgICAgICAgPGgyIGNsYXNzPSJvLWZvcm0taGVhZCI+Q29va2llcyBhcmUgcmVxdWlyZWQ8L2gyPgogICAgICAgICAgPHA+Q29va2llcyBhcmUgZGlzYWJsZWQgb24geW91ciBicm93c2VyLiBQbGVhc2UgZW5hYmxlIENvb2tpZXMgYW5kIHJlZnJlc2ggdGhpcyBwYWdlLjwvcD4KICAgICAgICAgIDxhIGNsYXNzPSJidXR0b24gYnV0dG9uLXByaW1hcnkiIHRhcmdldD0iX2JsYW5rIiBocmVmPSIuIj4KICAgICAgICAgICAgICBSZWZyZXNoIDwvYT4KICAgICAgPC9kaXY+CiAgPC9kaXY+CjwvZGl2PgoKPGRpdiBjbGFzcz0iZm9vdGVyIj4KICA8ZGl2IGNsYXNzPSJmb290ZXItY29udGFpbmVyIGNsZWFyZml4Ij4KICAgIDxwIGNsYXNzPSJjb3B5cmlnaHQiPlBvd2VyZWQgYnkgPGEgaHJlZj0iaHR0cDovL3d3dy5va3RhLmNvbS8iIGNsYXNzPSJpbmxpbmUtYmxvY2sgbm90cmFuc2xhdA==", "base64"));
  res.write(new Buffer("ZSI+T2t0YTwvYT48L3A+CiAgICA8cCBjbGFzcz0icHJpdmFjeS1wb2xpY3kiPjxhIGhyZWY9Ii9wcml2YWN5IiB0YXJnZXQ9Il9ibGFuayIgY2xhc3M9ImlubGluZS1ibG9jayBtYXJnaW4tbC0xMCI+UHJpdmFjeSBQb2xpY3k8L2E+PC9wPgogIDwvZGl2Pgo8L2Rpdj4KCjxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij5mdW5jdGlvbiBydW5Mb2dpblBhZ2UgKGZuKSB7dmFyIG1haW5TY3JpcHQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzY3JpcHQnKTttYWluU2NyaXB0LnNyYyA9ICdodHRwOi8vcmFpbi5va3RhMS5jb206MTgwMi9hc3NldHMvanMvbXZjL2xvZ2lucGFnZS9pbml0TG9naW5QYWdlLnBhY2suMjUxYzc3MjE5MzM1Nzg1OGMzMzUzZjA2OGM1ZmRiZjUuanMnO2RvY3VtZW50LmdldEVsZW1lbnRzQnlUYWdOYW1lKCdoZWFkJylbMF0uYXBwZW5kQ2hpbGQobWFpblNjcmlwdCk7Zm4gJiYgbWFpblNjcmlwdC5hZGRFdmVudExpc3RlbmVyKCdsb2FkJywgZnVuY3Rpb24gKCkgeyBzZXRUaW1lb3V0KGZuLCAxKSB9KTt9PC9zY3JpcHQ+PHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPgooZnVuY3Rpb24oKXsKCiAgdmFyIGJhc2VVcmwgPSAnaHR0cFx4M0FceDJGXHgyRnJhaW4ub2t0YTEuY29tXHgzQTE4MDInOwogIHZhciBzdXBwbGllZFJlZGlyZWN0VXJpID0gJyc7CiAgdmFyIHJlcG9zdCA9IGZhbHNlOwogIHZhciBzdGF0ZVRva2VuID0gJyc7CiAgdmFyIGZyb21VcmkgPSAnXHgyRm9hdXRoMlx4MkZ2MVx4MkZhdXRob3JpemVceDJGcmVkaXJlY3RceDNGb2t0YV9rZXlceDNEUFlIX0hrTDBTOTFUUk9IMW8xemcxMzFYcUxHRnJjcXhZT203Yk83ZVNpVSc7CiAgdmFyIHVzZXJuYW1lID0gJyc7CiAgdmFyIHJlbWVtYmVyTWUgPSB0cnVlOwogIHZhciBzbXNSZWNvdmVyeSA9IGZhbHNlOwogIHZhciBjYWxsUmVjb3ZlcnkgPSBmYWxzZTsKICB2YXIgZW1haWxSZWNvdmVyeSA9IHRydWU7CiAgdmFyIHVzZXJuYW1lTGFiZWwgPSAnVXNlcm5hbWUnOwogIHZhciB1c2VybmFtZUlubGluZUxhYmVsID0gJyc7CiAgdmFyIHBhc3N3b3JkTGFiZWwgPSAnUGFzc3dvcmQnOwogIHZhciBwYXNzd29yZElubGluZUxhYmVsID0gJyc7CiAgdmFyIHNpZ25pbkxhYmVsID0gJ1NpZ25ceDIwSW4nOwogIHZhciBmb3Jnb3RwYXNzd29yZExhYmVsID0gJ0ZvcmdvdFx4MjBwYXNzd29yZFx4M0YnOwogIHZhciB1bmxvY2thY2NvdW50TGFiZWwgPSAnVW5sb2NrXHgyMGFjY291bnRceDNGJzsKICB2YXIgaGVscExhYmVsID0gJ0hlbHAnOwogIHZhciBvcmdTdXBwb3J0UGhvbmVOdW1iZXIgPSAnJzsKICB2YXIgaGlkZVNpZ25PdXRGb3JNRkEgPSBmYWxzZTsKICB2YXIgbG9naW5QYWdlVXJsUmVkaXJlY3QgPSAnJzsKICB2YXIgZW5hYmxlVXJsRml4Rm9yRW1iZWRkZWRCcm93c2VycyA9IGZhbHNlOwogIHZhciBmb290ZXJIZWxwVGl0bGUgPSAnTmVlZFx4MjBoZWxwXHgyMHNpZ25pbmdceDIwaW5ceDNGJzsKICB2YXIgcmVjb3ZlcnlGbG93UGxhY2Vob2xkZXIgPSAnRW1haWxceDIwb3JceDIwVXNlcm5hbWUnOwogIHZhciBzaWduT3V0VXJsID0gJyc7CiAgdmFyIHNlY3VyaXR5SW1hZ2UgPSB0cnVlOwogIAoKICB2YXIgd2luZG93c1ZlcmlmeSA9IGZhbHNlOwogIAogICAgd2luZG93c1ZlcmlmeSA9IHRydWU7CiAgCgogIHZhciBzZWxmU2VydmljZVVubG9jayA9IGZhbHNlOwogIAoKICB2YXIgcHJldmVudEJyb3dzZXJGcm9tU2F2aW5nT2t0YVBhc3N3b3JkID0gZmFsc2U7CiAgCgogIHZhciBhdXRvUHVzaCA9IGZhbHNlOwogIAoKICB2YXIgcHVibGlzaFRvQWNjb3VudENob29zZXIgPSBmYWxzZTsKICB2YXIgYWNjb3VudENob29zZXJEaXNjb3ZlcnlVcmwgPSBudWxsOwogIAogICAgcHVibGlzaFRvQWNjb3VudENob29zZXIgPSB0cnVlOwogICAgYWNjb3VudENob29zZXJEaXNjb3ZlcnlVcmwgPSAnaHR0cHM6Ly9sb2dpbi5va3RhLmNvbS9kaXNjb3ZlcnkvaWZyYW1lLmh0bWwnOwogIAoKICB2YXIgYXZvaWREb3VibGVSZXF1ZXN0TVNJb3NBcHAgPSBmYWxzZTsKICAKCiAgdmFyIGN1c3RvbUV4cGlyZWRQYXNzd29yZCA9IGZhbHNlOwogIAogICAgY3VzdG9tRXhwaXJlZFBhc3N3b3JkID0gdHJ1ZTsKICAKCiAgLy8gSW4gY2FzZSBvZiBjdXN0b20gYXBwIGxvZ2luLCB0aGUgdXJpIGlzIGFscmVhZHkgYWJzb2x1dGUsIHNvIHdlIG11c3Qgbm90IGF0dGFjaCBiYXNlVXJsCiAgdmFyIHJlZGlyZWN0VXJpOwogIGlmIChpc0Fic29sdXRlVXJpKGZyb21VcmkpKSB7CiAgICAgIHJlZGlyZWN0VXJpID0gZnJvbVVyaTsKICB9IGVsc2UgewogICAgICByZWRpcmVjdFVyaSA9IGJhc2VVcmwgKyBmcm9tVXJpOwogIH0KICAKCiAgdmFyIGN1c3RvbUJ1dHRvbnM7CiAgCgogIHZhciBjdXN0b21MaW5rcyA9IFtdOwogIAoKICB2YXIgbGlua1BhcmFt", "base64"));
  res.write(new Buffer("czsKICAKCiAgdmFyIGlkcERpc2NvdmVyeTsKICAKCiAgdmFyIGhhc09BdXRoMkNvbnNlbnRGZWF0dXJlID0gZmFsc2U7CiAgdmFyIGNvbnNlbnRGdW5jOwogIAoKICB2YXIgbG9naW5QYWdlQ29uZmlnID0gewogICAgZnJvbVVyaTogZnJvbVVyaSwKICAgIHJlcG9zdDogcmVwb3N0LAogICAgcmVkaXJlY3RVcmk6IHJlZGlyZWN0VXJpLAogICAgaXNNb2JpbGVDbGllbnRMb2dpbjogZmFsc2UsCiAgICBpc01vYmlsZVNTTzogZmFsc2UsCiAgICBsaW5rUGFyYW1zOiBsaW5rUGFyYW1zLAogICAgaGFzQ2hyb21lT1NGZWF0dXJlOiBmYWxzZSwKICAgIHNob3dMaW5rVG9BcHBTdG9yZTogZmFsc2UsCiAgICBwdWJsaXNoVG9BY2NvdW50Q2hvb3NlcjogcHVibGlzaFRvQWNjb3VudENob29zZXIsCiAgICBhY2NvdW50Q2hvb3NlckRpc2NvdmVyeVVybDogYWNjb3VudENob29zZXJEaXNjb3ZlcnlVcmwsCiAgICBhdm9pZERvdWJsZVJlcXVlc3RNU0lvc0FwcDogYXZvaWREb3VibGVSZXF1ZXN0TVNJb3NBcHAsCiAgICBwcmV2ZW50QnJvd3NlckZyb21TYXZpbmdPa3RhUGFzc3dvcmQ6IHByZXZlbnRCcm93c2VyRnJvbVNhdmluZ09rdGFQYXNzd29yZCwKICAgIGVuYWJsZVVybEZpeEZvckVtYmVkZGVkQnJvd3NlcnM6IGVuYWJsZVVybEZpeEZvckVtYmVkZGVkQnJvd3NlcnMsCiAgICBsb2dpblBhZ2VVcmxSZWRpcmVjdDogbG9naW5QYWdlVXJsUmVkaQ==", "base64"));
  res.write(new Buffer("cmVjdCwKICAgIHNpZ25JbjogewogICAgICBlbDogJyNzaWduaW4tY29udGFpbmVyJywKICAgICAgYmFzZVVybDogYmFzZVVybCwKICAgICAgbG9nbzogJ2h0dHA6Ly9yYWluLm9rdGExLmNvbToxODAyL2Fzc2V0cy9pbWcvbG9nb3Mvb2t0YS1sb2dvLjAwYjI4ZTU1MjU3Mzg5OWUxNWZhNmU3NzI3ODc1OWQ1LnBuZycsCiAgICAgIGxvZ29UZXh0OiAnUmFpblx4MkRDbG91ZDU5JywKICAgICAgaGVscFN1cHBvcnROdW1iZXI6IG9yZ1N1cHBvcnRQaG9uZU51bWJlciwKICAgICAgc3RhdGVUb2tlbjogc3RhdGVUb2tlbiwKICAgICAgdXNlcm5hbWU6IHVzZXJuYW1lLAogICAgICBzaWduT3V0TGluazogc2lnbk91dFVybCwKICAgICAgY29uc2VudDogY29uc2VudEZ1bmMsCgogICAgICBmZWF0dXJlczogewogICAgICAgIHJvdXRlcjogdHJ1ZSwKICAgICAgICBzZWN1cml0eUltYWdlOiBzZWN1cml0eUltYWdlLAogICAgICAgIHJlbWVtYmVyTWU6IHJlbWVtYmVyTWUsCiAgICAgICAgYXV0b1B1c2g6IGF1dG9QdXNoLAogICAgICAgIHNtc1JlY292ZXJ5OiBzbXNSZWNvdmVyeSwKICAgICAgICBjYWxsUmVjb3Zlcnk6IGNhbGxSZWNvdmVyeSwKICAgICAgICBlbWFpbFJlY292ZXJ5OiBlbWFpbFJlY292ZXJ5LAogICAgICAgIHdpbmRvd3NWZXJpZnk6IHdpbmRvd3NWZXJpZnksCiAgICAgICAgc2VsZlNlcnZpY2VVbmxvY2s6IHNlbGZTZXJ2aWNlVW5sb2NrLAogICAgICAgIG11bHRpT3B0aW9uYWxGYWN0b3JFbnJvbGw6IHRydWUsCiAgICAgICAgZGV2aWNlRmluZ2VycHJpbnRpbmc6IGZhbHNlLAogICAgICAgIGhpZGVTaWduT3V0TGlua0luTUZBOiBoaWRlU2lnbk91dEZvck1GQSwKICAgICAgICBjdXN0b21FeHBpcmVkUGFzc3dvcmQ6IGN1c3RvbUV4cGlyZWRQYXNzd29yZCwKICAgICAgICAvL2lkcERpc2NvdmVyeTogaWRwRGlzY292ZXJ5CiAgICAgICAgY29uc2VudDogaGFzT0F1dGgyQ29uc2VudEZlYXR1cmUsCiAgICAgIH0sCgogICAgICBhc3NldHM6IHsKICAgICAgICBiYXNlVXJsOiBva3RhLmNkblVybEhvc3RuYW1lICsgJy9hc3NldHMvanMvbXZjL2xvZ2lucGFnZS9pMThuJwogICAgICB9LAoKICAgICAgbGFuZ3VhZ2U6IG9rdGEubG9jYWxlLAogICAgICBpMThuOiB7fSwKCiAgICAgIGN1c3RvbUJ1dHRvbnM6IGN1c3RvbUJ1dHRvbnMsCgogICAgICBoZWxwTGlua3M6IHsKICAgICAgICBoZWxwOiAnJywKICAgICAgICBmb3Jnb3RQYXNzd29yZDogJycsCiAgICAgICAgdW5sb2NrOiAnJywKICAgICAgICBjdXN0b206IGN1c3RvbUxpbmtzCiAgICAgIH0KICAgIH0KICB9OwoKICBsb2dpblBhZ2VDb25maWcuc2lnbkluLmkxOG5bb2t0YS5sb2NhbGVdID0gewogICAgJ3ByaW1hcnlhdXRoLnVzZXJuYW1lLnBsYWNlaG9sZGVyJzogdXNlcm5hbWVMYWJlbCwKICAgICdwcmltYXJ5YXV0aC51c2VybmFtZS50b29sdGlwJzogdXNlcm5hbWVJbmxpbmVMYWJlbCwKICAgICdwcmltYXJ5YXV0aC5wYXNzd29yZC5wbGFjZWhvbGRlcic6IHBhc3N3b3JkTGFiZWwsCiAgICAncHJpbWFyeWF1dGgucGFzc3dvcmQudG9vbHRpcCc6IHBhc3N3b3JkSW5saW5lTGFiZWwsCiAgICAncHJpbWFyeWF1dGgudGl0bGUnOiBzaWduaW5MYWJlbCwKICAgICdmb3Jnb3RwYXNzd29yZCc6IGZvcmdvdHBhc3N3b3JkTGFiZWwsCiAgICAndW5sb2NrYWNjb3VudCc6IHVubG9ja2FjY291bnRMYWJlbCwKICAgICdoZWxwJzogaGVscExhYmVsLAogICAgJ25lZWRoZWxwJzogZm9vdGVySGVscFRpdGxlLAogICAgJ3Bhc3N3b3JkLmZvcmdvdC5lbWFpbC5vci51c2VybmFtZS5wbGFjZWhvbGRlcic6IHJlY292ZXJ5Rmxvd1BsYWNlaG9sZGVyLAogICAgJ3Bhc3N3b3JkLmZvcmdvdC5lbWFpbC5vci51c2VybmFtZS50b29sdGlwJzogcmVjb3ZlcnlGbG93UGxhY2Vob2xkZXIsCiAgICAnYWNjb3VudC51bmxvY2suZW1haWwub3IudXNlcm5hbWUucGxhY2Vob2xkZXInOiByZWNvdmVyeUZsb3dQbGFjZWhvbGRlciwKICAgICdhY2NvdW50LnVubG9jay5lbWFpbC5vci51c2VybmFtZS50b29sdGlwJzogcmVjb3ZlcnlGbG93UGxhY2Vob2xkZXIKICB9OwoKICBmdW5jdGlvbiBpc09sZFdlYkJyb3dzZXJDb250cm9sKCkgewogICAgLy8gV2Ugbm8gbG9uZ2VyIHN1cHBvcnQgSUU3LiBJZiB3ZSBzZWUgdGhlIE1TSUUgNy4wIGJyb3dzZXIgbW9kZSwgaXQncyBhIGdvb2Qgc2lnbmFsCiAgICAvLyB0aGF0IHdlJ3JlIGluIGEgd2luZG93cyBlbWJlZGRlZCBicm93c2VyLgogICAgaWYgKG5hdmlnYXRvci51c2VyQWdlbnQuaW5kZXhPZignTVNJRSA3LjAnKSA9PT0gLTEpIHsKICAgICAgcmV0dXJuIGZhbHNlOwogICAgfQoKICAgIC8vIEJlY2F1c2UgdGhlIHVzZXJBZ2VudCBpcyB0aGUgc2FtZSBhY3Jvc3MgZW1iZWRkZWQgYnJvd3NlcnMsIHdlIHVzZSBmZWF0dXJlCiAgICAvLyBkZXRlY3Rpb24gdG8gc2VlIGlmIHdlJ3JlIHJ1bm5pbmcgb24gb2xkZXIgdmVyc2lvbnMgdGhhdCBkbyBub3Qgc3VwcG9ydCB1cGRhdGluZwogICAgLy8gdGhlIGRvY3VtZW50TW9kZSB2aWEgeC11YS1jb21wYXRpYmxlLgogICAgcmV0dXJuIGRvY3VtZW50LmFsbCAmJiAhd2luZG93LmF0b2I7CiAgfQoKICBmdW5jdGlvbiBpc0Fic29sdXRlVXJpKHVyaSkgewogICAgdmFyIHBhdCA9IC9eaHR0cHM/OlwvXC8vaTsKICAgIHJldHVybiBwYXQudGVzdCh1cmkpOwogIH0KCiAgdmFyIHVuc3VwcG9ydGVkQ29udGFpbmVyID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ29rdGEtc2lnbi1pbicpOwoKICAvLyBPbGQgdmVyc2lvbnMgb2YgV2ViQnJvd3NlciBDb250cm9scyAoc3BlY2lmaWNhbGx5LCBPbmVEcml2ZSkgcmVuZGVyIGluIElFNyBicm93c2VyCiAgLy8gbW9kZSwgd2l0aCBubyB3YXkgdG8gb3ZlcnJpZGUgdGhlIGRvY3VtZW50TW9kZS4gSW4gdGhpcyBjYXNlLCBpbmZvcm0gdGhlIHVzZXIgdGhleSBuZWVkCiAgLy8gdG8gdXBncmFkZS4KICBpZiAoaXNPbGRXZWJCcm93c2VyQ29udHJvbCgpKSB7CiAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgndW5zdXBwb3J0ZWQtb25lZHJpdmUnKS5yZW1vdmVBdHRyaWJ1dGUoJ3N0eWxlJyk7CiAgICB1bnN1cHBvcnRlZENvbnRhaW5lci5yZW1vdmVBdHRyaWJ1dGUoJ3N0eWxlJyk7CiAgfQogIGVsc2UgaWYgKCFuYXZpZ2F0b3IuY29va2llRW5hYmxlZCkgewogICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3Vuc3VwcG9ydGVkLWNvb2tpZScpLnJlbW92ZUF0dHJpYnV0ZSgnc3R5bGUnKTsKICAgIHVuc3VwcG9ydGVkQ29udGFpbmVyLnJlbW92ZUF0dHJpYnV0ZSgnc3R5bGUnKTsKICB9CiAgZWxzZSB7CiAgICB1bnN1cHBvcnRlZENvbnRhaW5lci5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKHVuc3VwcG9ydGVkQ29udGFpbmVyKTsKICAgIHJ1bkxvZ2luUGFnZShmdW5jdGlvbiAoKSB7CiAgICAgIE9rdGFMb2dpbi5pbml0TG9naW5QYWdlKGxvZ2luUGFnZUNvbmZpZyk7CiAgICB9KTsKICB9Cgp9KCkpOwo8L3NjcmlwdD4KCjwvYm9keT4KPC9odG1sPgo=", "base64"));
  res.end();

  return __filename;
};
